/** Defines the tyronZIL DID scheme */
export default class DidScheme {
    static readonly schemeIdentifier = "did:";
    static readonly methodName = "tyron:";
    static readonly blockchain = "zil:";
    readonly network: NetworkNamespace;
    readonly didUniqueSuffix: string;
    readonly did: string;
    constructor(input: SchemeInputData);
    /** Generates a tyronZIL DID with the given didUniqueSuffix and network */
    static newDID(input: SchemeInputData): Promise<DidScheme>;
}
export declare enum NetworkNamespace {
    Mainnet = "main:",
    Testnet = "test:",
    Isolated = "isol:"
}
export interface SchemeInputData {
    network: NetworkNamespace;
    /** The globally unique part of the DID */
    didUniqueSuffix: string;
}
