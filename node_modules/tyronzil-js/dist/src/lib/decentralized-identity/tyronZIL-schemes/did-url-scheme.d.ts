import DidScheme, { SchemeInputData } from "./did-scheme";
export declare enum UrlParameters {
    Hl = "hl",
    Service = "service",
    VersionId = "version-id",
    VersionTime = "version-time",
    InitialState = "sidetree-initial-state"
}
export default class DidUrlScheme extends DidScheme {
    readonly didUrl?: string;
    readonly path?: string;
    readonly query?: string;
    readonly fragment?: string;
    readonly longFormDid?: string;
    private constructor();
    /** Validates if the given DID is a proper Tyron Decentralized Identifier */
    static validate(did: string): Promise<DidUrlScheme>;
}
export interface UrlInput {
    schemeInput: SchemeInputData;
    path?: string;
    query?: string;
    fragment?: string;
}
export interface LongFormDidInput {
    schemeInput: SchemeInputData;
    suffixData: string;
    delta: string;
}
export interface Query {
    urlParameter: UrlParameters;
    value: string;
}
