import { OperationType } from '../protocols/sidetree';
import { TyronPrivateKeys } from '../util/did-keys';
import { PatchModel } from '../protocols/models/document-model';
import DidState from './did-resolve/did-state';
import { TransitionValue } from '../../blockchain/tyronzil';
/** Generates a `Tyron DID-Update` operation */
export default class DidUpdate {
    readonly type = OperationType.Update;
    readonly decentralized_identifier: string;
    readonly newDocument: TransitionValue[];
    readonly docHash: string;
    readonly signature: string;
    readonly newUpdateKey: string;
    readonly privateKeys: TyronPrivateKeys;
    private constructor();
    /***            ****            ***/
    /** Generates a `Tyron DID-Update` operation with input from the CLI */
    static execute(input: UpdateOperationInput): Promise<DidUpdate>;
}
/***            ** interfaces **            ***/
/** Defines input data for a `Tyron DID-Update` operation */
export interface UpdateOperationInput {
    state: DidState;
    updatePrivateKey: string;
    patches: PatchModel[];
}
