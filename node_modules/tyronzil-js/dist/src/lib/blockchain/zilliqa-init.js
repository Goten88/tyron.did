"use strict";
/*
    TyronZIL-js: Decentralized identity client for the Zilliqa blockchain platform
    Copyright (C) 2020 Julio Cesar Cabrapan Duarte

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const did_scheme_1 = require("../decentralized-identity/tyronZIL-schemes/did-scheme");
const API = __importStar(require("@zilliqa-js/zilliqa"));
const Util = __importStar(require("@zilliqa-js/util"));
class ZilliqaInit {
    constructor(network) {
        let NETWORK_ENDPOINT;
        let CHAIN_ID;
        switch (network) {
            case did_scheme_1.NetworkNamespace.Mainnet:
                NETWORK_ENDPOINT = ZilliqaEndpoint.Mainnet;
                CHAIN_ID = ZilliqaChainID.Mainnet;
                break;
            case did_scheme_1.NetworkNamespace.Testnet:
                NETWORK_ENDPOINT = ZilliqaEndpoint.Testnet;
                CHAIN_ID = ZilliqaChainID.Testnet;
                break;
            case did_scheme_1.NetworkNamespace.Isolated:
                NETWORK_ENDPOINT = ZilliqaEndpoint.IsolatedServer;
                CHAIN_ID = ZilliqaChainID.IsolatedServer;
                break;
        }
        this.endpoint = NETWORK_ENDPOINT;
        this.chainID = CHAIN_ID;
        this.API = new API.Zilliqa(this.endpoint);
        this.zilVersion = Util.bytes.pack(this.chainID, 1);
    }
}
exports.default = ZilliqaInit;
var ZilliqaEndpoint;
(function (ZilliqaEndpoint) {
    ZilliqaEndpoint["Mainnet"] = "https://api.zilliqa.com/";
    ZilliqaEndpoint["Testnet"] = "https://dev-api.zilliqa.com/";
    ZilliqaEndpoint["IsolatedServer"] = "https://zilliqa-isolated-server.zilliqa.com/";
})(ZilliqaEndpoint || (ZilliqaEndpoint = {}));
var ZilliqaChainID;
(function (ZilliqaChainID) {
    ZilliqaChainID[ZilliqaChainID["Mainnet"] = 1] = "Mainnet";
    ZilliqaChainID[ZilliqaChainID["Testnet"] = 333] = "Testnet";
    ZilliqaChainID[ZilliqaChainID["IsolatedServer"] = 222] = "IsolatedServer";
})(ZilliqaChainID || (ZilliqaChainID = {}));
//# sourceMappingURL=zilliqa-init.js.map