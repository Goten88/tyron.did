import { NetworkNamespace } from '../decentralized-identity/tyronZIL-schemes/did-scheme';
import { OperationType } from '../decentralized-identity/protocols/sidetree';
export default class TyronState {
    readonly contract_owner: string;
    readonly decentralized_identifier: string;
    readonly tyron_hash: string;
    readonly did_status: OperationType;
    readonly verification_methods: Map<string, string>;
    readonly services: Map<string, [string, string]>;
    readonly did_update_key: string;
    readonly did_recovery_key: string;
    readonly created: number;
    readonly ledger_time: number;
    readonly sidetree_transaction_number: number;
    private constructor();
    /** Fetches the current state from the blockchain
     * @params addr: the Zilliqa address of the user's smart-contract
    */
    static fetch(network: NetworkNamespace, didcAddr: string): Promise<TyronState>;
}
/***            ** interfaces **            ***/
/** The Tyron State Model */
export interface TyronStateModel {
    contract_owner: string;
    decentralized_identifier: string;
    tyron_hash: string;
    did_status: string;
    verification_methods: Map<string, string>;
    services: Map<string, [string, string]>;
    did_update_key: string;
    did_recovery_key: string;
    created: number;
    ledger_time: number;
    sidetree_transaction_number: number;
}
